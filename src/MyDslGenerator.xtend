/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Component
import org.xtext.example.mydsl.myDsl.Button
import org.xtext.example.mydsl.myDsl.TextField
import org.xtext.example.mydsl.myDsl.Label
import org.xtext.example.mydsl.myDsl.ButtonStyle
import org.xtext.example.mydsl.myDsl.TextFieldStyle
import org.xtext.example.mydsl.myDsl.HintText
import org.xtext.example.mydsl.myDsl.Material
//import org.xtext.example.mydsl.myDsl.Paper
//import org.xtext.example.mydsl.myDsl.PaperStyle
import org.xtext.example.mydsl.myDsl.Class


/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(e: resource.allContents.toIterable.filter(Class)){
			fsa.generateFile('''«e.name».js''',
				generateComponent(e,resource));
		}
	}
	
	def generateComponent(Class t, Resource res) '''
		«doImports()»
		
		«FOR s: t.properties»
		«IF s instanceof Component»
		«FOR q: res.allContents.toIterable.filter(Class)»
		export default class «t.name» extends Component{
			render() {
				return(
					<«s.name» style={{  }}
						«FOR m: res.allContents.toIterable.filter(Material)»«determineElement(m,res)»«ENDFOR»
					</«s.name»>
				)
			}	
		}
		«ENDFOR»
		«ENDIF»
		«ENDFOR»
	'''
	
	def doImports()'''
		import React, { Component, PropTypes } from 'react'
		import { Paper, RaisedButton, TextField } from 'material-ui'
	'''
	
	def determineElement(Material e, Resource res)'''
«««	«IF e instanceof Paper»<Paper«FOR f: e.properties»«IF f instanceof Label» label="«f.attribute»"«ENDIF»«IF f instanceof PaperStyle» style={{"«f.paperStyle»"}}«ENDIF»«ENDFOR»''/>«ENDIF»
	«IF e instanceof Button»<RaisedButton«FOR f: e.properties»«IF f instanceof Label» label="«f.attribute»"«ENDIF»«IF f instanceof ButtonStyle» style={{"«f.buttonStyle»"}}«ENDIF»«ENDFOR»/>«ENDIF»
	«IF e instanceof TextField»<TextField«FOR f: e.properties»«IF f instanceof HintText» hintText="«f.attribute»"«ENDIF»«IF f instanceof TextFieldStyle» style={{"«f.textfieldStyle»"}}«ENDIF»«ENDFOR»/>«ENDIF»
	'''
}
